def svenn(f, x0, h):
    """
    Функция svenn осуществляет поиск интервала Свенна
    на функции f(x) с начальной точкой x0 и шагом h.
    """
    # Определяем начальные точки x1 и x2
    d = h
    x1 = x0
    x2 = x1 + d
    # Оцениваем значение функции в точках x1 и x2
    f1 = f(x1)
    f2 = f(x2)
    # Находим длину интервала для дальнейшего деления
    length = abs(d)
    # Если значение функции в x1 меньше, чем в x2,
    # то двигаемся в сторону уменьшения x
    if f2 > f1:
        d = -h
        length = -length
        x2 = x1
        f2 = f1
        x1 = x1 + d
        f1 = f(x1)
    # Повторяем процедуру деления интервала,
    # пока не будет найден локальный минимум
    while True:
        d = 2 * d
        x3 = x2 + d
        f3 = f(x3)
        # Если значение функции в x3 равно
        # значению функции в x2,
        # то делаем новый шаг в том же направлении
        if f3 == f2:
            x1 = x2
            x2 = x3
            f1 = f2
            f2 = f3
            continue
        # Если значение функции в x3 больше,
        # чем значение функции в x2,
        # то интервал удаётся искать в другую сторону
        elif f3 > f2:
            return (min(x1, x3), max(x1, x3))
        # Если значение функции в x3 меньше
        # значений в x1 и x2, значит, локальный
        # минимум находится в интервале
        elif f3 < f2:
            x1 = x2
            x2 = x3
            f1 = f2
            f2 = f3
            length = abs(d)

def f(x):
    return x**2-4*x+5

# Ищем интервал Свенна, содержащий локальный минимум функции f(x)
x_min, x_max = svenn(f, 0, 0.1)

print("Интервал Свенна для функции f(x): [{}, {}]".format(x_min, x_max))
